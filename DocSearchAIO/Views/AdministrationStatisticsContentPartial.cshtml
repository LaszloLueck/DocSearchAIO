@model DocSearchAIO.DocSearch.TOs.IndexStatistic 
<div class="container mt-2">
    <div class="row">
        <div class="col-12">
            <span class="h5">Statistiken</span>
        </div>
    </div>
</div>
<div class="container mt-2 border rounded border-color-gray">
    <div class="row mt-1">
        <div class="col-12">
            <span class="h5">Allgemein</span>
        </div>
    </div>
    <div class="row mt-1">
        <div class="col-3">Gesamtanzahl Dokumente</div>
        <div class="col-9">@(Model.IndexStatisticModels.Sum(a => a.DocCount))</div>
    </div>
    <div class="row mt-1">
        <div class="col-3">Gesamte Indexgröße in Byte</div>
        <div class="col-9">@($"{Model.IndexStatisticModels.Sum(a => a.SizeInBytes):0,0}")</div>
    </div>
</div>
<div class="container mt-2 border rounded border-color-gray">
    <div class="row mt-1">
        <div class="col-12">
            <span class="h5">Letzte Ausführung</span>
        </div>
    </div>
    @foreach (var runtimeModel in Model.RuntimeStatistics)
    {
        <div class="row">
            <div class="col-12">
                <span class="h5">@runtimeModel.Key</span>
            </div>
        </div>
        <div class="row">
            <div class="col-3">
                <span>Id:</span>
            </div>
            <div class="col-9">
                <span>@runtimeModel.Value.Id</span>
            </div>
        </div>
        <div class="row">
            <div class="col-3">
                <span>Startzeit:</span>
            </div>
            <div class="col-9">
                <span>@($"{runtimeModel.Value.StartJob:dd.MM.yyyy HH:mm:ss}")</span>
            </div>
        </div>
        <div class="row">
            <div class="col-3">
                <span>Endezeit:</span>
            </div>
            <div class="col-9">
                <span>@($"{runtimeModel.Value.EndJob:dd.MM.yyyy HH:mm:ss}")</span>
            </div>
        </div>
        <div class="row">
            <div class="col-3">
                <span>Dokumente verarbeitet:</span>
            </div>
            <div class="col-9">
                <span>@runtimeModel.Value.EntireDocCount</span>
            </div>
        </div>
        <div class="row">
            <div class="col-3">
                <span>Dokumente mit Fehlern:</span>
            </div>
            <div class="col-9">
                <span>@runtimeModel.Value.ProcessingError</span>
            </div>
        </div>
        <div class="row">
            <div class="col-3">
                <span>Dokumente indexiert:</span>
            </div>
            <div class="col-9">
                <span>@runtimeModel.Value.IndexedDocCount</span>
            </div>
        </div>
        <div class="row">
            <div class="col-3">
                <span>Dokumente verarbeitet/s:</span>
            </div>
            @{
                if (runtimeModel.Value.ElapsedTimeMillis > 0 && runtimeModel.Value.EntireDocCount > 0 && runtimeModel.Value.ElapsedTimeMillis / 1000 > 0)
                {
                    <div class="col-9">
                        <span>@(runtimeModel.Value.EntireDocCount / (runtimeModel.Value.ElapsedTimeMillis / 1000))</span>
                    </div>
                }
                else
                {
                    <div class="col-9">
                        <span>0</span>
                    </div>
                }
            }
        </div>
        @if (runtimeModel.Value.CacheEntry.HasValue)
        {
            <div class="row">
                <div class="col-3">
                    <span>In Memory Cache Status</span>
                </div>
                <div class="col-9">
                    <span>@runtimeModel.Value.CacheEntry.Value.JobState.ToString()</span>
                </div>
            </div>
            <div class="row">
                <div class="col-3">
                    <span>In Memory Cache Zeit</span>
                </div>
                <div class="col-9">
                    <span>@runtimeModel.Value.CacheEntry.Value.DateTime</span>
                </div>
            </div>
        }
    }
</div>
<div class="container mt-2 border rounded border-color-gray">
    <div class="row mt-1">
        <div class="col-12">
            <span class="h5">Pro Index</span>
        </div>
    </div>
    @foreach (var indexStatisticModel in Model.IndexStatisticModels)
    {
        <div class="row">
            <div class="col-12">
                <span class="h6">@indexStatisticModel.IndexName</span>
            </div>
        </div>
        <div class="row mb-2">
            <div class="col-3">Anzahl Dokumente</div>
            <div class="col-9">@indexStatisticModel.DocCount</div>
        </div>
        <div class="row mb-2">
            <div class="col-3">Größe ind Bytes</div>
            <div class="col-9">@($"{indexStatisticModel.SizeInBytes:0,0}")</div>
        </div>
        <div class="row mb-2">
            <div class="col-3">Fetch-Time in ms</div>
            <div class="col-9">@(indexStatisticModel.FetchTimeMs)</div>
        </div>
        <div class="row mb-2">
            <div class="col-3">Fetches total</div>
            <div class="col-9">@(indexStatisticModel.FetchTotal)</div>
        </div>
        <div class="row mb-2">
            <div class="col-3">Suggest-Time in ms</div>
            <div class="col-9">@(indexStatisticModel.SuggestTimeMs)</div>
        </div>
        <div class="row mb-2">
            <div class="col-3">Suggests total</div>
            <div class="col-9">@(indexStatisticModel.SuggestTotal)</div>
        </div>
        <div class="row mb-2">
            <div class="col-3">Query-Time in ms</div>
            <div class="col-9">@(indexStatisticModel.QueryTimeMs)</div>
        </div>
        <div class="row mb-2">
            <div class="col-3">Queries total</div>
            <div class="col-9">@(indexStatisticModel.QueryTotal)</div>
        </div>
    }

</div>