image: registry.gretzki.ddns.net:5080/laszlo/containerruntimeglobal_x64_dotnet_build:22.04_7.0.3

variables:
  OBJECTS_DIRECTORY: 'obj'
  NUGET_PACKAGES_DIRECTORY: '.nuget'
  SOURCE_CODE_PATH: 'DocSearchAIO'

cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
  paths:
    - '$SOURCE_CODE_PATH/$OBJECTS_DIRECTORY/project.assets.json'
    - '$SOURCE_CODE_PATH/$OBJECTS_DIRECTORY/*.csproj.nuget.*'
    - '$NUGET_PACKAGES_DIRECTORY'
  policy: pull-push

before_script:
  - 'dotnet restore --packages $NUGET_PACKAGES_DIRECTORY'

build:
  stage: build
  script:
    - 'dotnet build --no-restore'

backend-test:
  stage: test
  script:
    - 'dotnet test --no-restore'
      
code-analysis:
  stage: test
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    DEEPSOURCE_DSN: "https://331c13667f51410b95b27345f6042153@deepsource.io"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  only:
    - merge_requests
    - master
    - develop
  script:
    - "dotnet tool install --global coverlet.console"
    - "curl https://deepsource.io/cli | sh"
    - "apt install -y git"
    - "if [ -d CollectorResults ]; then rm -Rf CollectorResults; fi"
    - "dotnet build"
    - "dotnet test --results-directory:\"CollectorResults\"  --collect:\"XPlat Code Coverage\""
    - "./bin/deepsource report --analyzer test-coverage --key csharp --value-file ./CollectorResults/*/coverage.cobertura.xml"

deploy:
  stage: deploy
  image: registry.gretzki.ddns.net:5080/docker:stable
  services:
    - registry.gretzki.ddns.net:5080/docker:dind
  variables:
    DOCKER_HOST: tcp://172.17.0.1:2375
    PROJECT_NAME: docsearchaio
    TAG: latest
  before_script:
    - docker login ${GITLAB_REGISTRY} -u ${GITLAB_REGISTRY_USER} -p ${GITLAB_REGISTRY_PASSWORD}
  after_script:
    - docker logout ${GITLAB_REGISTRY}
  script:
    - docker build --file Dockerfile -t ${GITLAB_REGISTRY}/${PROJECT_NAME}:$TAG . --no-cache
    - docker push ${GITLAB_REGISTRY}/${PROJECT_NAME}:$TAG
